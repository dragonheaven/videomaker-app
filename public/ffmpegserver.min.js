/**
 * @license ffmpegserver.js 0.0.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.
 * Available via the MIT license.
 * see: http://github.com/greggman/ffmpegserver.js for details
 */
/**
 * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
!(function (a, b) { typeof define === "function" && define.amd ? define([], b) : a.FFMpegServer = {Video: b()}; }(this, () => { let a; let b; let c; return (function (d) { function e(a, b) { return u.call(a, b); } function f(a, b) { let c; let d; let e; let f; let g; let h; let i; let j; let k; let l; let m; const n = b && b.split("/"); const o = s.map; const p = o && o["*"] || {}; if (a && a.charAt(0) === ".") if (b) { for (a = a.split("/"), g = a.length - 1, s.nodeIdCompat && w.test(a[g]) && (a[g] = a[g].replace(w, "")), a = n.slice(0, n.length - 1).concat(a), k = 0; k < a.length; k += 1) if (m = a[k], m === ".")a.splice(k, 1), k -= 1; else if (m === "..") { if (k === 1 && (a[2] === ".." || a[0] === "..")) break; k > 0 && (a.splice(k - 1, 2), k -= 2); }a = a.join("/"); } else a.indexOf("./") === 0 && (a = a.substring(2)); if ((n || p) && o) { for (c = a.split("/"), k = c.length; k > 0; k -= 1) { if (d = c.slice(0, k).join("/"), n) for (l = n.length; l > 0; l -= 1) if (e = o[n.slice(0, l).join("/")], e && (e = e[d])) { f = e, h = k; break; } if (f) break; !i && p && p[d] && (i = p[d], j = k); }!f && i && (f = i, h = j), f && (c.splice(0, h, f), a = c.join("/")); } return a; } function g(a, b) { return function () { const c = v.call(arguments, 0); return typeof c[0] !== "string" && c.length === 1 && c.push(null), n.apply(d, c.concat([a, b])); }; } function h(a) { return function (b) { return f(b, a); }; } function i(a) { return function (b) { q[a] = b; }; } function j(a) { if (e(r, a)) { const b = r[a]; delete r[a], t[a] = !0, m.apply(d, b); } if (!e(q, a) && !e(t, a)) throw new Error(`No ${a}`); return q[a]; } function k(a) { let b; const c = a ? a.indexOf("!") : -1; return c > -1 && (b = a.substring(0, c), a = a.substring(c + 1, a.length)), [b, a]; } function l(a) { return function () { return s && s.config && s.config[a] || {}; }; }let m; let n; let o; let p; var q = {}; var r = {}; var s = {}; var t = {}; var u = Object.prototype.hasOwnProperty; var v = [].slice; var w = /\.js$/; o = function (a, b) { let c; let d = k(a); let e = d[0]; return a = d[1], e && (e = f(e, b), c = j(e)), e ? a = c && c.normalize ? c.normalize(a, h(b)) : f(a, b) : (a = f(a, b), d = k(a), e = d[0], a = d[1], e && (c = j(e))), {f: e ? `${e}!${a}` : a, n: a, pr: e, p: c}; }, p = {require(a) { return g(a); }, exports(a) { const b = q[a]; return typeof b !== "undefined" ? b : q[a] = {}; }, module(a) { return {id: a, uri: "", exports: q[a], config: l(a)}; }}, m = function (a, b, c, f) { let h; let k; let l; let m; let n; let s; const u = []; const v = typeof c; if (f = f || a, v === "undefined" || v === "function") { for (b = !b.length && c.length ? ["require", "exports", "module"] : b, n = 0; n < b.length; n += 1) if (m = o(b[n], f), k = m.f, k === "require")u[n] = p.require(a); else if (k === "exports")u[n] = p.exports(a), s = !0; else if (k === "module")h = u[n] = p.module(a); else if (e(q, k) || e(r, k) || e(t, k))u[n] = j(k); else { if (!m.p) throw new Error(`${a} missing ${k}`); m.p.load(m.n, g(f, !0), i(k), {}), u[n] = q[k]; }l = c ? c.apply(q[a], u) : void 0, a && (h && h.exports !== d && h.exports !== q[a] ? q[a] = h.exports : l === d && s || (q[a] = l)); } else a && (q[a] = c); }, a = b = n = function (a, b, c, e, f) { if (typeof a === "string") return p[a] ? p[a](b) : j(o(a, b).f); if (!a.splice) { if (s = a, s.deps && n(s.deps, s.callback), !b) return; b.splice ? (a = b, b = c, c = null) : a = d; } return b = b || function () {}, typeof c === "function" && (c = e, e = f), e ? m(d, a, b, c) : setTimeout(() => { m(d, a, b, c); }, 4), n; }, n.config = function (a) { return n(a); }, a._defined = q, c = function (a, b, c) { if (typeof a !== "string") throw new Error("See almond README: incorrect module build, no module name"); b.splice || (c = b, b = []), e(q, a) || e(r, a) || (r[a] = [a, b, c]); }, c.amd = {jQuery: !0}; }()), c("node_modules/almond/almond.js", () => {}), c("src/virtualsocket", [], () => { const a = function (a) { a = a || {}; let b; const c = a.quiet === !0 ? console.log.bind(console) : function () {}; const d = a.url || `ws://${window.location.host}`; c(`connecting to: ${d}`), b = new WebSocket(d), this.__defineGetter__("readyState", () => { return b.readyState; }), this.isConnected = function () { return b.readyState === WebSocket.OPEN; }; const e = function (a) { b.readyState === WebSocket.OPEN && b.send(a); }; this.on = function (a, c) { switch (a) { case "connect": b.onopen = c; break; case "disconnect": b.onclose = c; break; case "error": b.onerror = c; break; case "message": b.onmessage = function (a) { if (a.data === "P") return void e("P"); try { var b = JSON.parse(a.data); } catch (d) { console.log(d); }b && c(b); }; } }, this.send = function (a) { e(JSON.stringify(a)); }, this.close = function () { b.close(); }; }; return a; }), c("src/frameencoder", ["./virtualsocket"], (a) => { function b(b) { b = b || {}; let c; const d = b.quiet ? function () {} : console.log.bind(console); let e = !1; const f = {}; const g = function (a, b) { const c = f[a]; c && c.apply(this, b); }.bind(this); this.addEventListener = function (a, b) { f[a] = b; }, this.on = this.addEventListener, this.removeEventListener = function (a) { f[a] = void 0; }, this.start = function (a) { k({cmd: "start", data: a}); }, this.add = function (a) { k({cmd: "frame", data: {dataURL: a.toDataURL()}}); }, this.end = function () { k({cmd: "end"}); }; const h = function () { d("disconnected"), e = !1, g("disconnect"); }; const i = function () { d("connected"), e = !0, g("connect"); }; const j = function (a) { const b = f[a.cmd]; b ? b(a.data) : console.error(`Unknown Message: ${a.cmd}`); }; c = b.socket || new a(b), c.on("connect", i.bind(this)), c.on("message", j.bind(this)), c.on("disconnect", h.bind(this)); var k = function (a) { c.isConnected() && c.send(a); }; } return b; }), c("src/ffmpegserver", ["./frameencoder"], (a) => { function b(b) { function c() { for (let a = {"ffmpegserver.js": !0, "ffmpegserver.min.js": !0}, b = document.getElementsByTagName("script"), c = 0; c < b.length; ++c) { const d = b[c]; let e = d.src; const f = e.lastIndexOf("/"); if (f >= 0 && (e = e.substr(f + 1)), a[e]) { const g = new URL(d.src); const h = `ws://${g.host}`; return h; } } } function d() { const a = n - o; return q && p > a; } function e(a) { const b = r[a]; b && b.apply(null, Array.prototype.slice.call(arguments, 1)); } function f() { d() && e("process"); } function g(a) { console.error(a), e("error", a); } function h(a) { o = Math.max(o, a.frameNum), f(); } function i(a) { e("progress", a.progress); } function j(a) { e("finished", a.pathname, a.size); } function k(a) { q = !0, m.start(l), f(); }b = b || {}, b.url = b.url || c(); let l; var m = new a(b); var n = 0; var o = 0; var p = b.maxQueuedFrames || 4; var q = !1; var r = {}; this.start = function (a) { l = a || {}; }, this.add = function (a) { ++n, m.add(a); }, this.end = function () { m.end(); }, this.on = function (a, b) { r[a] = b; }, this.safeToProceed = d, m.on("start", k), m.on("error", g), m.on("end", j), m.on("frame", h), m.on("progress", i); } return b; }), c("main", ["src/ffmpegserver"], (a) => { return a; }), b(["main"], (a) => { return a; }, void 0, !0), c("build/js/includer", () => {}), b("main"); }));
